//***********************************************************************
// Andriod Client
// Create 2D map of random city
// Provide network access
// Last Modified - 10/15/2013 â€“ A.Motaghi
//***********************************************************************
package com.manish.zoomimage;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity; import android.graphics.Matrix;
import android.graphics.PointF;
import android.os.Bundle;
import android.os.StrictMode;
import android.util.DisplayMetrics;
import android.util.FloatMath;
import android.view.MotionEvent;
74
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;
@TargetApi(9)
@SuppressLint({ "ParserError", "ParserError", "ParserError", "ParserError", "ParserError",
"ParserError", "ParserError", "ParserError", "ParserError", "ParserError", "ParserError",
"ParserError", "ParserError", "ParserError", "NewApi", "NewApi", "NewApi" })
public class MainActivity extends Activity {
ImageView imageDetail;
Matrix matrix = new Matrix();
Matrix savedMatrix = new Matrix();
PointF startPoint = new PointF();
PointF midPoint = new PointF();
float oldDist = 1f;
int screenWidth=0;
int screenHeight=0;
static final int NONE = 0;
static final int DRAG = 1;
static final int ZOOM = 2;
int mode = NONE;
/** Called when the activity is first created. */
@SuppressLint("NewApi")
@Override 
75
public void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
StrictMode.ThreadPolicy policy = new
StrictMode.ThreadPolicy.Builder().permitAll().build();
StrictMode.setThreadPolicy(policy);
DisplayMetrics metrics =getResources().getDisplayMetrics();
screenWidth = metrics.widthPixels;
screenHeight = metrics.heightPixels;90-
imageDetail = (ImageView) findViewById(R.id.imageView1);
/** * set on touch listener on image */
imageDetail.setOnTouchListener(new View.OnTouchListener() {
@Override
public boolean onTouch(View v, MotionEvent event) {
ImageView view = (ImageView) v;
System.out.println("matrix=" + savedMatrix.toString());
switch (event.getAction() & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
savedMatrix.set(matrix);
startPoint.set(event.getX(), event.getY());
mode = DRAG;
break;
/*case MotionEvent.ACTION_POINTER_DOWN:
76
oldDist = spacing(event);
if (oldDist > 10f) { savedMatrix.set(matrix);
midPoint(midPoint, event);
mode = ZOOM;
}
break;*/
case MotionEvent.ACTION_UP:
case
MotionEvent.ACTION_POINTER_UP:
mode = NONE;
sendDataToMatlab();
break;
case MotionEvent.ACTION_MOVE:
if (mode == DRAG) {
matrix.set(savedMatrix);
matrix.postTranslate(event.getX() - startPoint.x, event.getY() - startPoint.y);
}
else if (mode == ZOOM) {
float newDist =
spacing(event);
if (newDist > 10f) {
77
matrix.set(savedMatrix);
float scale =
newDist / oldDist;
matrix.postScale(scale, scale, midPoint.x, midPoint.y);
}
}
break;
}
view.setImageMatrix(matrix);
return true;
}
@SuppressLint("FloatMath")
private float spacing(MotionEvent event) {
float x = event.getX(0) - event.getX(1);
float y = event.getY(0) - event.getY(1);
return FloatMath.sqrt(x * x + y * y);
}
private void midPoint(PointF point, MotionEvent event) {
float x = event.getX(0) + event.getX(1);
float y = event.getY(0) + event.getY(1);
point.set(x / 2, y / 2); } });
78
}
@SuppressLint({ "ParserError", "ParserError" })
protected void sendDataToMatlab() {
// TODO Auto-generated method stub
byte adr[] = new byte[4];
 adr[0]=(byte)(192);
 adr[1]=(byte)(168);
 adr[2]=(byte)(1);
 adr[3]=(byte)(141);
 InetAddress addr=null;
 try {
 addr = InetAddress.getByName("192.168.68.1");
 //finaltext.setText(addr.toString());
 } catch (UnknownHostException e1) {
 e1.printStackTrace();
 }
 try {

 Socket con=new Socket(addr, 5000);
 DataOutputStream dos = new DataOutputStream(con.getOutputStream());

 float[] values=new float[9];
 
79
imageDetail.getImageMatrix().getValues(values);
int left=(int)values[2];
 int top=(int)values[5];
 left=left<0?0:left;
 left=left>screenWidth?screenWidth:left;
 left+=imageDetail.getDrawable().getBounds().width()/2;
 top=top<0?0:top;
 top=top>screenHeight?screenHeight:top;
 top+=imageDetail.getDrawable().getBounds().height()/2;

 left=left*500/screenWidth;

 top=top*500/screenHeight;
 dos.writeInt(left);
 dos.writeInt(top);
 dos.flush();
 con.close();
 }
 catch (UnknownHostException e1) {
 e1.printStackTrace();
 }
80
 catch (IOException e2) {
 Toast.makeText(this, "Unable to connect to matlab",Toast.LENGTH_LONG).show();
 System.out.println("Problem while creating");
 e2.printStackTrace();
 }
}
}
